<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAABs
        DgAAAk1TRnQBSQFMAwEBAAFQAQABUAEAAR4BAAEeAQAE/wEhAQAI/wFCAU0BNgcAATYDAAEoAwABeAMA
        AR4DAAEBAQABIAUAAUABOBIAAwEEAgQDAQQDAQECAwMBBAMCAQMDAgQDAQQDAQECAwMBBAMCAQMDAQEC
        AwMBBAMBAQIDCgEOAwoBDQMBAQIDAwEEAwEBAgMDAQQDAwEEAwEBAgMDAQQDAQQCBAMBBAMBAQIDAwEE
        AwIBAwMBAQL/AGkAAwEBAgMFAQcDBAEFAwYBCAMEAQUDBAEGAwUBBwMEAQUDBgEIAwQBBgMEBAYBCAMD
        AQQDBgEIA0wBoANMAaADBgEIAwMBBAMGAQgDBAEGAwQEBgEIAwMBBAMGAQgDBAEGAwQBBQMGAQgDBAEF
        AwYBCAMCAQP/AGkAAwMEBAEFAwcBCQMDAQQDBgEIAwQBBgMEAQUDBwEKAwMBBAMGAQgDBAEGAwQBBQMH
        AQoDFAEbA0sBsgNLAbIDFAEbAwgBCwMDAQQDBQEHAwUBBwMDAQQDBwEKAwQEBQEHAwUBBwMDAQQDBwEK
        AwQBBQMDAQT/AGkAAwEBAgMFAQcDAwEEAwcBCQMEBAUBBwMGAQgDAwEEAwcBCQMHAQkDNQFYA0sBrwMm
        AewDAQH/AwAB/wMAAf8DAQH/AyYB7ANLAa8DNQFYAwcBCgMHAQkDAwEEAwcBCQMEAQYDBAEFAwcBCQMD
        AQQDBgEIAwIBA/8AaQADAgEDAwQEBgEIAwQBBQMGAQgDBAEGAwQBBgMFAQcDMwFSAzYB3wMUAfYDTAGo
        AzkBYAMhATEDTQGrA00BqwMhATEDOQFfA0sBqQMUAfYDNgHfAzMBUgMGAQgDBAEGAwUBBwMGAQgDBAEF
        AwYBCAMEAQYDAwEE/wBpAAMCAQMDBAEGAwUBBwMEAQYDBQEHAwUBBwMKAQ0DSwGdAwYB/ANLAZUDFAEb
        AwQBBgMEAQYDBAEGA0oBmANKAZgDBAEGAwUBBwMEAQYDFAEbA0oBlAMGAfwDSwGdAwkBDAMFAQcDBQEH
        AwQBBgMEAQYDBAEGAwMBBP8AaQADAgEDAwUBBwMEAQUDBwEJAwQBBgMKAQ0DTAG4AykB6gMtAUYDBAEF
        AwQEBgEIAwMBBAMGAQgDBAEGAwQEBgEIAwMBBAMHAQkDBAEGAwQBBgMtAUYDKQHqA0wBuAMKAQ0DBAEG
        AwcBCQMEAQUDBgEIAwIBA/8AaQADAwQEAQUDBwEJAwMBBAMGAQgDSwGdAykB6gMhATEDAwEEAwYBCAME
        AQYDBAEFAwcBCgMDAQQDBQEHAwUBBwMDAQQDBwEKAwMBBAMFAQcDBQEHAwMBBAMiATIDKQHqA0sBnQMG
        AQgDAwEEAwcBCgMEAQUDBAEF/wBpAAMBAQIDBQEHAwQBBQMHAQkDMwFSAwYB/AMtAUYDAwEEAwcBCQME
        AQUDBAQGAQgDAwEEAwcBCQMEAQUDBAEFAwYBCAMDAQQDBwEJAwQBBgMEAQYDBwEJAwMBBAMuAUcDBgH8
        AzMBUgMHAQkDAwEEAwYBCAMCAQP/AGkAAwIBAwMEAQYDBQQHAQoDNwHeA0sBlQMEAQYDBQEHAwQEBQEH
        AwUBBwMEAQYDBQEHAwQEBQEHAwUBBwMEBAUBBwMEBAUBBwMFAQcDBAEGAwUBBwMEAQYDSgGUAzYB3wMH
        AQoDBQEHAwQBBgMDAQT/AGkAAwIBAwMEAQYDBQEHAzUBWAMUAfYDEwEaAwQBBgMFAQcDBAQFAQcDBQEH
        AwQBBgMFAQcDBAQFAQcDBQEHAwQBBgMFAQcDBAEGAwUBBwMFAQcDBAEGAwUBBwMEAQYDFAEbAxQB9gM1
        AVgDBQEHAwQBBgMDAQT/AGkAAwEBAgMFAQcDBAEFA0sBrwNMAagDBAQGAQgDAwEEAwcBCQMEAQYDBAQG
        AQgDAwEEAwcBCQMEAQYDBAQGAQgDAwEEAwcBCQMEAQYDBAEGAwcBCQMDAQQDBgEIAwQBBgNLAakDSwGv
        AwMBBAMGAQgDAgED/wBpAAMDBAQBBQMHAQoDIwHtAzkBYAMEAQYDBAEFAwcBCgMDAQQDBgEIAwQBBgMD
        AQQDBwEKAwMBBAMFAQcDBQEHAwMBBAMHAQoDAwEEAwUBBwMFAQcDAwEEAwcBCgMEBAUBBwM5AWADJgHs
        AwgBCwMEAQUDBAEF/wBpAAMBAQIDBQEHAxQBHAMBAf8DIQEwAwQEBgEIAwMBBAMHAQkDBAEFAwQEBgEI
        AwMBBAMHAQkDBAEGAwQEBgEIAwMBBAMGAQgDBAEGAwQBBQMGAQgDAwEEAwYBCAMEAQYDIQExAwEB/wMU
        ARsDBgEIAwIBA/8AaQADCgENA0wBoQNLAbIDAAH/A0wBrANKAZgDBAEGAwUBBwMEBAUBBwMEAQYDBAEG
        AwUBBwMEAQYDBQEHAwUBBwMEAQYDBQEHAwQBBgMFAQcDBQEHAwQBBgMFAQcDBAEGA0oBmANNAasDAAH/
        A0sBsgNMAaEDCgEO/wBpAAMKAQ0DTAGhA0sBsgMAAf8DTAGsA0oBmAMEAQYDBQEHAwQEBQEHAwQBBgME
        AQYDBQEHAwQEBQEHAwUBBwMEAQYDBQEHAwQEBQEHAwUBBwMEBAUBBwMEAQYDSgGYA0wBrAMAAf8DSwGy
        A0wBoQMKAQ7/AGkAAwEBAgMFAQcDFAEbAwEB/wMhATADBQEHAwYBCAMDAQQDBwEJAwQBBQMEBAYBCAMD
        AQQDBwEJAwQBBgMEAQYDBwEJAwMBBAMHAQkDBAEGAwQBBgMHAQkDAwEEAwcBCQMEAQYDIQExAwEB/wMU
        ARsDBgEIAwIBA/8AaQADAwQEAQUDBwEKAyMB7QM5AWADBAEGAwQBBQMHAQkDAwEEAwYBCAMEAQYDBAEF
        AwcBCgMDAQQDBgEIAwUBBwMDAQQDBwEKAwMBBAMFAQcDBQEHAwMBBAMHAQoDBAEFAwQBBgM5AWADJgHs
        AwgBCwMEAQUDBAEF/wBpAAMBAQIDBQEHAwQBBQNLAa8DTAGoAwQEBgEIAwQBBQMGAQgDBAEGAwQEBgEI
        AwQBBQMGAQgDBAEGAwQEBgEIAwQBBQMGAQgDBAEGAwQEBgEIAwQBBQMGAQgDBAEGA0wBqANLAa4DBAEF
        AwYBCAMCAQP/AGkAAwIBAwMEAQYDBAEGAzYBWQMUAfYDEwEaAwQBBgMEAQYDBAEGAwUBBwMEAQYDBAEG
        AwQBBgMEAQYDBAEGAwQBBgMEAQYDBAEGAwQBBgMFAQcDBQEHAwQBBgMEAQYDBAEGAxMBGgMUAfYDNQFY
        AwQBBgMEAQYDAwEE/wBpAAMCAQMDBAQGAQgDBwEJAzcB3gNLAZUDBAQGAQgDBAEFAwYBCAMFAQcDBAQG
        AQgDBAQFAQcDBQEHAwQBBQMGAQgDBAQFAQcDBgEIAwQBBQMGAQgDBAEFA0sBlQM2Ad8DBwEJAwYBCAME
        AQUDAwEE/wBpAAMCAQMDBQEHAwMBBAMHAQoDMwFSAwYB/AMtAUYDAwEEAwcBCQMEAQUDBAQGAQgDAwEE
        AwcBCQMEAQUDBAEGAwcBCQMDAQQDBwEJAwQBBgMEAQYDBwEJAwMBBAMuAUcDBgH8AzMBUgMHAQkDAwEE
        AwYBCAMCAQP/AGkAAwMEBAEFAwcBCQMDAQQDBgEIA0sBnQMpAeoDIQExAwMBBAMGAQgDBQEHAwQBBQMH
        AQkDAwEEAwUBBwMEAQYDAwEEAwcBCQMDAQQDBQEHAwUBBwMDAQQDIQExAykB6gNLAZ4DBgEIAwMBBAMH
        AQkDBAEFAwMBBP8AaQADAgEDAwUBBwMEAQUDBgEIAwQBBgMKAQ0DTAG4AykB6gMtAUYDBAEGAwQEBgEI
        AwQBBQMGAQgDBAEGAwQEBgEIAwQBBQMGAQgDBAEGAwQBBgMtAUYDKQHqA0wBuAMKAQ0DBAQGAQgDBAQF
        AQcDAgED/wBpAAMCAQMDBQEHAwQBBgMFAQcDBAEGAwUBBwMKAQ0DSwGdAwYB/ANLAZUDEwEaAwQBBgME
        AQYDBAEGA0oBmANKAZgDBAEGAwQBBgMFAQcDFAEbA0sBlQMGAfwDSwGdAwoBDQMEAQYDBAEGAwUBBwME
        AQYDBQEHAwIBA/8AaQADAgEDAwQBBQMGAQgDBAEFAwYBCAMEAQYDBAQGAQgDMwFSAzcB3gMUAfYDTAGo
        AzkBYAMhATADTAGsA0wBrAMhATADOQFgA0wBqAMUAfYDNwHeAzMBUgMGAQgDBAQFAQcDBgEIAwQBBQMH
        AQkDBAEFAwMBBP8AaQADAQECAwUBBwMDAQQDBwEKAwQEBQEHAwYBCAMDAQQDBwEKAwcBCQM1AVgDSwGu
        AyMB7QMBAf8DAAH/AwAB/wMBAf8DIwHtA0sBrwM1AVgDBwEKAwcBCQMDAQQDBgEIAwQBBgMEAQUDBwEK
        AwMBBAMGAQgDAgED/wBpAAMDBAQBBQMHAQkDAwEEAwYBCAMEAQYDBAEFAwcBCQMDAQQDBgEIAwQBBgME
        AQUDBwEKAxQBHANLAbIDSwGyAxQBHAMHAQoDAwEEAwUBBwMFAQcDAwEEAwcBCQMEBAUBBwMGAQgDAwEE
        AwcBCQMEAQUDAwEE/wBpAAMCAQMDBQEHAwQEBQEHAwQBBgMEAQYDBQEHAwQBBQMGAQgDBAEGAwQBBgMF
        AQcDBAQFAQcDTAGhA0wBoQMFAQcDBAQFAQcDBAEGAwQBBgMFAQcDBAQFAQcDBAEGAwQBBgMFAQcDBAQF
        AQcDAgED/wBsAAEBAwIEAwEEAwIEAwEEAwIBAwMCBAMBBAMCBAMBBAMCAQMDAgQDAQQDAgEDAwoBDgMK
        AQ0DAgQDAQQDAgQDAQQDAwEEAwIEAwEEAwIBAwMCBAMBBAMCBAMBBAMCAQMDAQEC/wBpAAFCAU0BPgcA
        AT4DAAEoAwABeAMAAR4DAAEBAQABAQUAAeABARYAA///AOIACw==
</value>
  </data>
</root>